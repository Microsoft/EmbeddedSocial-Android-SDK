/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See LICENSE in the project root for license information.
 */

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }
}

apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'
//apply plugin: 'com.google.gms.google-services' // applied at bottom of file to avoid dependency collisions

repositories {
    jcenter()
    maven {
        url "http://dl.bintray.com/acrowntest/test"
    }
}
android {
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
        }
    }
    publishNonDefault true
    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    resourcePrefix 'es_'
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
        buildConfigField "com.microsoft.embeddedsocial.server.ServerConfig", "SERVER", "com.microsoft.embeddedsocial.server.ServerConfig.STAGING"
    }
    buildTypes {
        debug {
            buildConfigField "boolean", "STANDALONE_APP", "false"
        }
        release {
            buildConfigField "boolean", "STANDALONE_APP", "false"
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debugStandalone.initWith(buildTypes.debug)
        debugStandalone {
            buildConfigField "boolean", "STANDALONE_APP", "true"
            signingConfig signingConfigs.debug
        }
        releaseStandalone.initWith(buildTypes.release)
        releaseStandalone {
            buildConfigField "boolean", "STANDALONE_APP", "true"
        }
    }
    lintOptions {
        abortOnError false
    }
    sourceSets {
        main {
            res.srcDirs 'src/main/res', 'src/main/res-public'
        }
    }
    libraryVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File((File) outputFolder, "EmbeddedSocial_SDK_$variant.buildType.name" + '.aar')
        }
    }
    productFlavors {
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.squareup.picasso:picasso:2.71828'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.7.0'
    compile 'com.google.android.gms:play-services-auth:11.8.0'
    compile 'com.google.firebase:firebase-core:16.0.1'
    compile "com.google.firebase:firebase-messaging:17.1.0"
    compile 'net.openid:appauth:0.3.0'
    compile 'com.squareup:otto:1.3.6'
    compile 'com.squareup.retrofit2:retrofit:2.4.0'
    compile 'com.squareup.okhttp3:okhttp:3.10.0'
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support:recyclerview-v7:26.1.0'
    compile 'com.android.support:cardview-v7:26.1.0'
    compile 'com.android.support:design:26.1.0'
    compile 'com.android.support:support-v4:26.1.0'
    compile 'com.android.support:support-annotations:28.0.0'
    compile 'de.hdodenhof:circleimageview:2.1.0'
    compile 'com.facebook.android:facebook-android-sdk:4.0.0'
    compile 'com.j256.ormlite:ormlite-android:4.48'
    compile 'com.floreysoft:jmte:3.1.1'
    compile 'com.github.chrisbanes.photoview:library:1.2.4'
    compile 'com.squareup.retrofit2:converter-gson:2.4.0'
    compile 'com.acrowntest.test:autorest:0.7.3'
    compile 'org.jetbrains:annotations:16.0.1'
}

retrolambda {
    jvmArgs '-noverify'
}
ext {
    outputFolder = new File((File) project.getProjectDir(), "aar")
}

def clearOutputFolder() {
    File[] files = outputFolder.listFiles()
    if (files != null) {
        for (File file : files) {
            file.delete()
        }
    }
}

clearOutputFolder()


def siteUrl = 'https://github.com/Microsoft/EmbeddedSocial-Android-SDK'
def gitUrl = 'https://github.com/Microsoft/EmbeddedSocial-Android-SDK.git'
def versionNum = '0.7.1'
group = "com.acrowntest.test"
version = versionNum

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                groupId "com.acrowntest.test"
                artifactId 'sdk'

                name = 'sdk'
                description = 'test library'
                url siteUrl

                licenses {
                    license {
                        name 'MIT'
                        url 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id 'acrown-msft'
                        name 'Alex Crown'
                        email 'acrown@microsoft.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

//task sourcesJar(type: Jar) {
//    from android.sourceSets.main.java.srcDirs
//    classifier = 'sources'
//}
//
//task javadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//    destinationDir = file("../javadoc")
//    failOnError false
//}
//
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}

//artifacts {
////    archives javadocJar
//    archives sourcesJar
//}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty('bintray.user')
    key = properties.getProperty('bintray.apikey')
    configurations = ['archives']
    pkg {
        repo = 'test'
        name = 'sdk'
        userOrg = 'acrowntest'
        licenses = ['MIT']
        vcsUrl = gitUrl
        publish = true
        version {
            name = versionNum
            desc = 'TestLib ' + versionNum
            released = new Date()
            vcsTag = versionNum
            attributes = ['gradle-plugin': 'com.acrowntest.test:sdk']
            gpg {
                sign = true
            }
        }
    }
}

apply plugin: 'com.google.gms.google-services'
